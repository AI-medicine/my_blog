{
  
    
        "post0": {
            "title": "My first blog post (ever)",
            "content": "Hello dear reader! . Welcome to my blog. This is my first post. I am currently taking the fast.ai2 deep learning course and as Rachel Thomas (the co-founder of fast.ai) recommended to start your own blog, I did so and set up my blog here. (This is really my first blog ever). . So in this post I want to introduce myself, what I have learned so far with fast.ai2 and what I am currently working on. . About me: . I am a medicine student from Germany and currently also learning deep learning to deploy it in pathology. . My journey so far in medical studies and coding: . So I have been interested in artificial intelligence (AI) for some time and especially for ways to combine it with medical studies. . With AI I refer to anything in AI. It was only some time later, that I realized that my chances to do something meaningful with medicine and AI without studying computer science for example, would be probably best with deep learning (which is a part of machine learning). . I have no profound coding background. Three years ago, I participated in a first coding Python beginner course from my university. Afterwards I also peeked from time to time into AI topics, but I never really found a way to focus on it more. . Until one year after my first coding course, I was also very busy with finishing the pre clinics part of my medical studies curriculum (in Germany the first 4 semesters of medical studies are part of this). That was a stressful time :). . So it was only around the end of 2018 - after the big first final state examination with which I successfully finished my pre clinics section - that I could also look a little around into other interests besides medical studies. . But I was also fascinated by neuroscience at that time and or especially by the intersection between neuroscience and AI. So I also looked into a neuroscience lab belonging to my university first. After several months of joining there for seminars and watching experiments, it didn&#39;t work out as I had hoped for myself. . So a little later, as I was frustrated and was not really sure where to go, I started to just continue to learn Python. It was late 2019 that I continued with Python. I ordered a &quot;Crash Course&quot; Python book (it is better as one may think from the title). I would highly recommend this book to people who have no idea about coding and would also like to do something with deep learning or programming in general and don&#39;t know where to start. But of course I have no comparison and therefore I can only pass on what worked for me (until now). . (Full name of the book: Python Crash Course, 2nd Edition: A Hands-On, Project-Based Introduction to Programming, Eric Matthes) . So I was still looking for a way to do something with AI or fancy &quot;neuroscience&quot;. I finally ended up in pathology, as my current advisor for my doctoral thesis uses deep learning methods in his research as well. . This is how I also landed at the fast.ai2 course (after another book and another course I tried). . So I am still in the course, and want to deploy deep learning soon in pathology, especially for using whole slide images (for some weeks I have already been experimenting with using deep learning (especially from the fast.ai library) for pathology, but I am also making the switch from the fastai1 to the fastai2 library at the moment). . Thank you dear reader, for following me until here (and if not, that&#39;s also totally ok :) ). . What I have learned so far with fast.ai2: . General things about statistics: . As Jeremy talked about COVID-19 for some time in the first two course videos, he also talked about whether and how significance and the p-value are useful for interpreting medical studies. . As I am also going to use the p-value at least partially soon in my own research, it was very helpful to hear from Jeremy several kind of &quot;take home messages&quot; regarding the p-value: . People very often make the mistake that they see a P-value which is not less than e.g. 0.05 and therefore make the erroneous conclusion that there is no relationship between data. . | With very little data, it is almost impossible to reach a P-value less than 0.05 for any hypothesis. . | You can use the P-value to find out whether you have gathered enough data for your own project. If you cannot reject your null hypothesis, imagine your null hypothesis to be the opposite claim of your initial null hypothesis. If you can neither reject the one nor the other you simply need to collect more data. . | One can neither measure the probability that the studied hypothesis is true with P-values nor that the data were produced by random chance alone . | . If a statistical model found by authors of a medical article suggests a practically relevant relationship between data, the practical importance should be inspected by looking at the slopes of the suggested function that describes the relationship: . Think about examples of independent variables and apply the respective slopes | . So I will quickly demonstrate this: Jeremy referred to an article in which there was putatively found a statistically significant relationship between transmissibility (dependent variable) and relative humidity and temperature (both independent variables). . Link: https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3551767 . They came up with the following function: R = 3.968 - 0.0383xT - 0.0224xH . R: transmissibility (of COVID-19) T: temperature H : relative humidity . Examples, that Jeremy suggested for demonstration (fictive values): City 1: T 10 °C, H 40% City 2: T 35 °C, H 80% . If you now calculate the transmissibility for both cities, City 1 had R = 2.689. City 1 would have a massive Covid-19 pandemic, as one person would on average infect 2.7 persons. . In City 2 with R = 0.8355 there would be no pandemic. . Using widgets and deploying web apps: . You can create web apps and you can create GUI (graphical user interface) widgets within a jupyter notebook | . ### General things about using fast.ai2: - There are batch transforms and . File &#34;&lt;ipython-input-6-46b1fb00d582&gt;&#34;, line 2 - There are batch transforms and ^ SyntaxError: invalid syntax .",
            "url": "https://medskillz.github.io/my_blog/2020/08/29/First-post.html",
            "relUrl": "/2020/08/29/First-post.html",
            "date": " • Aug 29, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # single-value selection over [Major_Genre, MPAA_Rating] pairs # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://medskillz.github.io/my_blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://medskillz.github.io/my_blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://medskillz.github.io/my_blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://medskillz.github.io/my_blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}